// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Models;

namespace Travel.Migrations
{
    [DbContext(typeof(TravelContext))]
    [Migration("20220831015358_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Travel.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            City = "Kharkiv",
                            Country = "Ukraine",
                            Description = "Big park with a lot of amusements",
                            Name = "Gorky Park"
                        },
                        new
                        {
                            DestinationId = 2,
                            City = "Seattle",
                            Country = "The USA",
                            Description = "A lot of different marine species in one place",
                            Name = "Seattle Aquarium"
                        },
                        new
                        {
                            DestinationId = 3,
                            City = "New York",
                            Country = "The USA",
                            Description = "A lot of different Art collections",
                            Name = "The Metropolitan Museum of Art"
                        },
                        new
                        {
                            DestinationId = 4,
                            City = "Amsterdam",
                            Country = "Netherlands",
                            Description = "Art museum housing European masterpieces",
                            Name = "Rijksmuseum"
                        });
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ReviewId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Description = "Great city!",
                            DestinationId = 1,
                            Rating = 5,
                            Title = "Trip to Kharkiv"
                        },
                        new
                        {
                            ReviewId = 2,
                            Description = "Great city, but a lot of homeless people!",
                            DestinationId = 2,
                            Rating = 3,
                            Title = "Trip to Seattle"
                        },
                        new
                        {
                            ReviewId = 3,
                            Description = "Great city, beautiful atmosphere!",
                            DestinationId = 3,
                            Rating = 4,
                            Title = "Trip to New York"
                        },
                        new
                        {
                            ReviewId = 4,
                            Description = "Great city! I like it so much. Modern and stylish architecture of the building. A lot of bridges and tulips!",
                            DestinationId = 4,
                            Rating = 5,
                            Title = "Trip to Amsterdam"
                        },
                        new
                        {
                            ReviewId = 5,
                            Description = "There is a reason the old saying goes I Love New York. You probably have to like being in a big city, which I do. The NYC culture, history, restaurants, shopping, parks and activities can keep you busy constantly. ",
                            DestinationId = 3,
                            Rating = 5,
                            Title = "My New York"
                        },
                        new
                        {
                            ReviewId = 6,
                            Description = "Amsterdam is a beautiful city. It is very charming.I was however disappointed by the city by and large due to other tourist. I didn't anticipate Amsterdam to be full of college age European rich kids",
                            DestinationId = 4,
                            Rating = 3,
                            Title = "Amsterdam"
                        });
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.HasOne("Travel.Models.Destination", "Destination")
                        .WithMany("Reviews")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("Travel.Models.Destination", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
